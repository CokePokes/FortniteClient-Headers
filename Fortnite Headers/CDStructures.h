//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jan  3 2018 14:07:36).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSURLRequest;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AQBufferParameters {
    unsigned int bufferSize;
    unsigned int packetCount;
};

struct AQBufferState {
    struct AudioQueueBuffer *bufferRef;
    struct AudioTimeStamp timestamp;
    _Bool enqueued;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct FAvfMediaAudioSamplePool;

struct FAvfMediaPlayer {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    float _field5;
    int _field6;
    struct FTimespan _field7;
    struct FTimespan _field8;
    struct IMediaEventSink *_field9;
    struct FString _field10;
    id _field11;
    id _field12;
    struct FString _field13;
    id _field14;
    struct TQueue<TFunction<void ()>, EQueueMode::Spsc> _field15;
    struct FMediaSamples *_field16;
    _Bool _field17;
    struct FAvfMediaTracks *_field18;
    _Bool _field19;
    struct FPThreadsCriticalSection _field20;
    struct FDelegateHandle _field21;
    struct FDelegateHandle _field22;
};

struct FAvfMediaTracks {
    CDUnknownFunctionPointerType *_field1;
    struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> _field2;
    struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> _field3;
    struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> _field4;
    struct FAvfMediaAudioSamplePool *_field5;
    struct FPThreadsCriticalSection _field6;
    id _field7;
    struct FMediaSamples *_field8;
    int _field9;
    int _field10;
    int _field11;
    struct AudioStreamBasicDescription _field12;
    struct TSharedPtr<FAvfMediaVideoSampler, ESPMode::Fast> _field13;
};

struct FAvfMediaVideoSampler;

struct FBAdDeviceBatteryInfo {
    long long _field1;
    double _field2;
};

struct FBAdSize {
    struct CGSize size;
};

struct FBAdStarRating {
    double value;
    long long scale;
};

struct FBAspectRatioInfo {
    struct CGSize _field1;
    struct CGSize _field2;
};

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FDelegateHandle {
    unsigned long long _field1;
};

struct FEvent {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct TAtomic<unsigned int> _field3;
};

struct FIndexedPointer {
    unsigned long long Ptrs;
};

struct FKeyboardConfig {
    long long _field1;
    long long _field2;
    long long _field3;
    _Bool _field4;
};

struct FLockFreePointerListLIFORoot<0, 1> {
    struct FPaddingForCacheContention<0> PadToAvoidContention1;
    struct FIndexedPointer Head;
    struct FPaddingForCacheContention<0> PadToAvoidContention2;
};

struct FMTLHeapDescriptor {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
};

struct FMediaSamples;

struct FMetalRingBuffer;

struct FNFAbrParameters {
    double _field1;
};

struct FNFFrameMetadata {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
};

struct FNFMP4FrameDelta;

struct FNFMP4FrameMetadata {
    unsigned long long offset;
    unsigned int size;
    unsigned int duration;
    unsigned long long dts;
    unsigned long long pts;
    unsigned long long absoluteDts;
};

struct FNFMP4Keyframe;

struct FNFMP4MehdAtom {
    int duration;
};

struct FNFMP4MoofAtom;

struct FNFMP4MoovAtom {
    struct FNFMP4MvhdAtom mvhdAtom;
    struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> trakAtoms;
    struct FNFMP4MvexAtom mvexAtom;
};

struct FNFMP4MoovAtomCompressed {
    struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> trakAtoms;
    struct FNFMP4MvhdAtom mvhdAtom;
};

struct FNFMP4MoovAtomProvider {
    struct FNFMP4MoovAtom _moovAtom;
    unsigned long long _moovAtomSize;
    struct FNFMP4SidxAtom _sidxAtom;
    struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> _moofAtoms;
};

struct FNFMP4MvexAtom {
    struct FNFMP4MehdAtom mehdAtom;
    struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> trexAtoms;
};

struct FNFMP4MvhdAtom {
    unsigned int timescale;
    unsigned int duration;
};

struct FNFMP4SidxAtom {
    unsigned int timescale;
    struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> segments;
};

struct FNFMP4SidxSegment;

struct FNFMP4TrakAtom;

struct FNFMP4TrakAtomForSeek;

struct FNFMP4TrexAtom;

struct FNFMp4FrameMetadataCompressor {
    struct FNFMP4FrameMetadata _frame;
    unsigned int _keyframeIndex;
    unsigned int _frameIndex;
    struct FNFMP4FrameMetadata _firstFrame;
    struct FNFMP4FrameMetadata _lastFrame;
    struct FNFMP4FrameMetadata _tempFrame;
    unsigned int _size;
    unsigned long long _largestOffset;
    unsigned int _seqNum;
    struct vector<FNFMP4Keyframe, std::__1::allocator<FNFMP4Keyframe>> _keyframes;
    struct vector<FNFMP4FrameDelta, std::__1::allocator<FNFMP4FrameDelta>> _deltas;
};

struct FNFPlayerState {
    _Bool playingRequested;
    _Bool isPlaying;
    _Bool isStalled;
    _Bool endTimeReached;
    _Bool firstAudioFrameEnqueued;
    _Bool stoppedEnqueuingVideo;
    _Bool stoppedEnqueuingAudio;
    _Bool isFirstVideoFrame;
    _Bool recreatedLayerOnError;
    _Bool audioEngineInitialized;
    CDStruct_1b6d18a9 lastStartingTime;
    CDStruct_1b6d18a9 latestEnqueuedVideoPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioDts;
    id playbackTimeObserverForAsset;
    id durationTimerForAsset;
    id stallTimerObserver;
    id sampleBufferFlushTimerObserver;
    CDStruct_1b6d18a9 backgroundPauseTime;
    unsigned int sampleAudioFrameSize;
};

struct FNFSeekStatus {
    _Bool _field1;
    CDStruct_1b6d18a9 _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct FNFTrackDownloaderState {
    NSURLRequest *urlRequest;
    unsigned long long priorOffset;
    unsigned long long bytesRequested;
    unsigned long long bytesReceived;
};

struct FPThreadsCriticalSection {
    struct _opaque_pthread_mutex_t _field1;
};

struct FPaddingForCacheContention<0>;

struct FReferenceControllerBase;

struct FScriptContainerElement;

struct FSharedReferencer<ESPMode::Fast> {
    struct FReferenceControllerBase *ReferenceController;
};

struct FString {
    struct TArray<char16_t, FDefaultAllocator> _field1;
};

struct FText {
    struct TSharedRef<ITextData, ESPMode::Fast> TextData;
    unsigned int Flags;
};

struct FTimespan {
    long long _field1;
};

struct FTurnBasedEventDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct FTurnBasedMatchmakerDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct ForAnyElementType {
    struct FScriptContainerElement *Data;
};

struct IMediaEventSink;

struct ITextData;

struct IVirtualKeyboardEntry;

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct SIOSWebBrowserWidget;

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> {
    struct ForAnyElementType _field1;
    int _field2;
    int _field3;
};

struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> {
    ForElementType_c283f1aa AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<FMetalDebugCommand *, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<112, 8>>, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<16, 8>>, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<char16_t, FDefaultAllocator> {
    struct ForAnyElementType _field1;
    int _field2;
    int _field3;
};

struct TArray<unsigned char, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TAtomic<unsigned int> {
    unsigned int _field1;
};

struct TBaseDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, EPurchaseTransactionState> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, FBSDKAccessToken *, FBSDKAccessToken *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, FBSDKProfile *, FBSDKProfile *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, NSDictionary *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &> {
    ForElementType_e8e2103b DelegateAllocator;
    int DelegateSize;
};

struct TBaseDelegate<void, const FGoogleSignInData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, const FGoogleSignOutData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBitArray<FDefaultBitArrayAllocator> {
    ForElementType_f51d7a19 AllocatorInstance;
    int NumBits;
    int MaxBits;
};

struct TLockFreePointerListLIFO<FMetalDebugCommandEncoder> {
    struct FLockFreePointerListLIFORoot<0, 1> RootList;
};

struct TMap<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, FDefaultSetAllocator, TDefaultMapHashableKeyFuncs<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, false>> {
    struct TSet<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>, TDefaultMapHashableKeyFuncs<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, false>, FDefaultSetAllocator> Pairs;
};

struct TMulticastDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, EPurchaseTransactionState> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, FBSDKAccessToken *, FBSDKAccessToken *> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, FBSDKProfile *, FBSDKProfile *> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, const FGoogleSignInData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, const FGoogleSignOutData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TNode;

struct TPadding {
    unsigned char Pad[16];
};

struct TQueue<TFunction<void ()>, EQueueMode::Spsc> {
    struct TNode *_field1;
    struct TNode *_field2;
};

struct TSet<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>, TDefaultMapHashableKeyFuncs<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, false>, FDefaultSetAllocator> {
    struct TSparseArray<TSetElement<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> Elements;
    ForElementType_a3459e67 Hash;
    int HashSize;
};

struct TSet<id, DefaultKeyFuncs<id, false>, FDefaultSetAllocator> {
    struct TSparseArray<TSetElement<id>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> Elements;
    ForElementType_a3459e67 Hash;
    int HashSize;
};

struct TSet<id<MTLResource>, DefaultKeyFuncs<id<MTLResource>, false>, FDefaultSetAllocator> {
    struct TSparseArray<TSetElement<id<MTLResource>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> Elements;
    ForElementType_a3459e67 Hash;
    int HashSize;
};

struct TSharedPtr<FAvfMediaVideoSampler, ESPMode::Fast> {
    struct FAvfMediaVideoSampler *_field1;
    struct FSharedReferencer<ESPMode::Fast> _field2;
};

struct TSharedPtr<FMetalRingBuffer, ESPMode::Fast> {
    struct FMetalRingBuffer *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
};

struct TSharedPtr<IVirtualKeyboardEntry, ESPMode::Fast> {
    struct IVirtualKeyboardEntry *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
};

struct TSharedPtr<SIOSWebBrowserWidget, ESPMode::Fast> {
    struct SIOSWebBrowserWidget *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
};

struct TSharedRef<ITextData, ESPMode::Fast> {
    struct ITextData *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
};

struct TSparseArray<TSetElement<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> {
    struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<112, 8>>, FDefaultAllocator> Data;
    struct TBitArray<FDefaultBitArrayAllocator> AllocationFlags;
    int FirstFreeIndex;
    int NumFreeIndices;
};

struct TSparseArray<TSetElement<id<MTLResource>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> {
    struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<16, 8>>, FDefaultAllocator> Data;
    struct TBitArray<FDefaultBitArrayAllocator> AllocationFlags;
    int FirstFreeIndex;
    int NumFreeIndices;
};

struct TSparseArray<TSetElement<id>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> {
    struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<16, 8>>, FDefaultAllocator> Data;
    struct TBitArray<FDefaultBitArrayAllocator> AllocationFlags;
    int FirstFreeIndex;
    int NumFreeIndices;
};

struct TTypeCompatibleBytes<FDelegateBase> {
    struct TPadding Padding;
};

struct TTypeCompatibleBytes<FSetElementId> {
    struct TPadding Padding;
};

struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> {
    struct TPadding Padding;
};

struct TTypeCompatibleBytes<unsigned int> {
    struct TPadding Padding;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _ABKPushStoryImageLink {
    char *_field1;
    char *_field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct deque<opaqueCMSampleBuffer *, std::__1::allocator<opaqueCMSampleBuffer *>> {
    struct __split_buffer<opaqueCMSampleBuffer **, std::__1::allocator<opaqueCMSampleBuffer **>> {
        struct opaqueCMSampleBuffer ***__first_;
        struct opaqueCMSampleBuffer ***__begin_;
        struct opaqueCMSampleBuffer ***__end_;
        struct __compressed_pair<opaqueCMSampleBuffer ***, std::__1::allocator<opaqueCMSampleBuffer **>> {
            struct opaqueCMSampleBuffer ***__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<opaqueCMSampleBuffer *>> {
        unsigned long long __first_;
    } __size_;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *>>> {
    struct __tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *>>> {
        struct __tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct opaqueCMSampleBuffer;

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct vector<FNFMP4FrameDelta, std::__1::allocator<FNFMP4FrameDelta>> {
    struct FNFMP4FrameDelta *__begin_;
    struct FNFMP4FrameDelta *__end_;
    struct __compressed_pair<FNFMP4FrameDelta *, std::__1::allocator<FNFMP4FrameDelta>> {
        struct FNFMP4FrameDelta *__first_;
    } __end_cap_;
};

struct vector<FNFMP4Keyframe, std::__1::allocator<FNFMP4Keyframe>> {
    struct FNFMP4Keyframe *__begin_;
    struct FNFMP4Keyframe *__end_;
    struct __compressed_pair<FNFMP4Keyframe *, std::__1::allocator<FNFMP4Keyframe>> {
        struct FNFMP4Keyframe *__first_;
    } __end_cap_;
};

struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> {
    struct FNFMP4MoofAtom *__begin_;
    struct FNFMP4MoofAtom *__end_;
    struct __compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom>> {
        struct FNFMP4MoofAtom *__first_;
    } __end_cap_;
};

struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> {
    struct FNFMP4SidxSegment *__begin_;
    struct FNFMP4SidxSegment *__end_;
    struct __compressed_pair<FNFMP4SidxSegment *, std::__1::allocator<FNFMP4SidxSegment>> {
        struct FNFMP4SidxSegment *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> {
    struct FNFMP4TrakAtom *__begin_;
    struct FNFMP4TrakAtom *__end_;
    struct __compressed_pair<FNFMP4TrakAtom *, std::__1::allocator<FNFMP4TrakAtom>> {
        struct FNFMP4TrakAtom *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
    struct FNFMP4TrakAtomForSeek *__begin_;
    struct FNFMP4TrakAtomForSeek *__end_;
    struct __compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
        struct FNFMP4TrakAtomForSeek *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> {
    struct FNFMP4TrexAtom *__begin_;
    struct FNFMP4TrexAtom *__end_;
    struct __compressed_pair<FNFMP4TrexAtom *, std::__1::allocator<FNFMP4TrexAtom>> {
        struct FNFMP4TrexAtom *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

#if 0
// Names with conflicting types:
typedef struct ?<FDelegateBase> {
    struct FScriptContainerElement *Data;
} ForElementType_72715528;

typedef struct ?<FSetElementId> {
    struct FScriptContainerElement *Data;
} ForElementType_7284640b;

typedef struct ?<TAlignedBytes<16, 16>> {
    struct FScriptContainerElement *Data;
} ForElementType_0fbc14d5;

typedef struct ?<unsigned int> {
    struct FScriptContainerElement *Data;
} ForElementType_3f67a483;

typedef struct ?<FDelegateBase> {
    struct TTypeCompatibleBytes<FDelegateBase> InlineData[1];
    ForElementType_72715528 SecondaryData;
} ForElementType_c283f1aa;

typedef struct ?<FSetElementId> {
    struct TTypeCompatibleBytes<FSetElementId> InlineData[1];
    ForElementType_7284640b SecondaryData;
} ForElementType_a3459e67;

typedef struct ?<TAlignedBytes<16, 16>> {
    struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> InlineData[2];
    ForElementType_0fbc14d5 SecondaryData;
} ForElementType_e8e2103b;

typedef struct ?<unsigned int> {
    struct TTypeCompatibleBytes<unsigned int> InlineData[4];
    ForElementType_3f67a483 SecondaryData;
} ForElementType_f51d7a19;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
} CDStruct_3d581f42;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_33dcf794;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    void *_field1;
    long long _field2;
} CDStruct_eb6fb79d;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
} CDStruct_8727d297;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    CDStruct_14f26992 _field1;
    CDStruct_14f26992 _field2;
} CDStruct_4c83c94d;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Template types
typedef struct TArray<unsigned char, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
} TArray_e98fc9dd;

typedef struct TBaseDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_42bf5e4a;

typedef struct TBaseDelegate<void, EPurchaseTransactionState> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_e7e2b5bd;

typedef struct TBaseDelegate<void, FBSDKAccessToken *, FBSDKAccessToken *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_87e0e685;

typedef struct TBaseDelegate<void, FBSDKProfile *, FBSDKProfile *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_fa0f8b1c;

typedef struct TBaseDelegate<void, NSDictionary *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_8ad3ede0;

typedef struct TBaseDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_867a88d4;

typedef struct TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &> {
    ForElementType_e8e2103b DelegateAllocator;
    int DelegateSize;
} TBaseDelegate_6994a642;

typedef struct TBaseDelegate<void, const FGoogleSignInData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_706c73d2;

typedef struct TBaseDelegate<void, const FGoogleSignOutData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_6a035cb8;

typedef struct TBaseDelegate<void, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_af776a3a;

typedef struct TBaseDelegate<void> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_0445fc9b;

typedef struct TLockFreePointerListLIFO<FMetalDebugCommandEncoder> {
    struct FLockFreePointerListLIFORoot<0, 1> RootList;
} TLockFreePointerListLIFO_b3862b72;

typedef struct TMulticastDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_2b2adb1e;

typedef struct TMulticastDelegate<void, EPurchaseTransactionState> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_dad13ae6;

typedef struct TMulticastDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_22137c99;

typedef struct TMulticastDelegate<void, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_12b8021a;

typedef struct TSharedPtr<FMetalRingBuffer, ESPMode::Fast> {
    struct FMetalRingBuffer *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
} TSharedPtr_ad1d9620;

typedef struct TSharedPtr<IVirtualKeyboardEntry, ESPMode::Fast> {
    struct IVirtualKeyboardEntry *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
} TSharedPtr_2699a924;

typedef struct TSharedPtr<SIOSWebBrowserWidget, ESPMode::Fast> {
    struct SIOSWebBrowserWidget *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
} TSharedPtr_551c0d26;

